services:

    # App
    app:
        container_name: '${CONTAINER_NAME}'
        build:
            context: ./docker/8.2
            dockerfile: Dockerfile
        image: '${CONTAINER_NAME}'
        working_dir: /var/www
        environment:
            LARAVEL_SAIL: 1
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/'
        networks:
            - sail
        depends_on:
            - mariadb
    # Database
    mariadb:
        container_name: '${CONTAINER_NAME}-mariadb'
        image: 'mariadb:10'
        #ports:
        #    - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'sail-mariadb:/var/lib/mysql'
            - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s

    # Proxy server
    nginx:
        container_name: '${CONTAINER_NAME}-nginx'
        image: nginx:latest
        ports:
            - '${APP_PORT}:80'
        volumes:
            - './nginx/app.conf:/etc/nginx/conf.d/default.conf'
            - './:/var/www'
        depends_on:
            - app
        networks:
            - sail

    # Websockets
#    soketi:
#        container_name: '${CONTAINER_NAME}-soketi'
#        image: 'quay.io/soketi/soketi:latest-16-alpine'
#        environment:
#            SOKETI_DEBUG: '1'
#            SOKETI_METRICS_SERVER_PORT: '9601'
#        ports:
#            - '${SOKETI_PORT:-6001}:6001'
#        #            - '${SOKETI_METRICS_SERVER_PORT:-9601}:9601'
#        networks:
#            - sail
    meilisearch:
        container_name: '${CONTAINER_NAME}-meilisearch'
        image: getmeili/meilisearch:v0.25.2
        environment:
            #            - http_proxy
            #            - https_proxy
            - MEILI_MASTER_KEY=${MEILISEARCH_KEY}
            - MEILI_NO_ANALYTICS=${MEILI_NO_ANALYTICS:-true}
            - MEILI_ENV=${MEILI_ENV:-development}
            - MEILI_LOG_LEVEL
            - MEILI_DB_PATH=${MEILI_DB_PATH:-/data.ms}
        #        ports:
        #            - 8113:7700 # do not expose meilisearch port to the outside world
        networks:
            - sail
        volumes:
            - meilisearch-data:/data.ms
        restart: unless-stopped
networks:
    sail:
        driver: bridge
volumes:
    sail-mariadb:
        driver: local